version: "3.7"
services:
  server:
    container_name: server
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
    volumes:
      - ./backend/:/var/www/html/backend
      - ./frontend/:/var/www/html/frontend
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/ssl/
      # - ./backend/docker-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - app-network
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html/backend
    depends_on:
      - redis
    volumes:
      - ./backend/:/var/www/html/backend
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  frontend:
    container_name: frontend
    tty: true 
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./frontend:/var/www/html/frontend
    depends_on:
      - backend
    ports:
      - 3000:3000
    networks:
      - app-network
  redis:
    container_name: redis
    image: "redis:alpine"
    # command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/redis-data:/var/lib/redis
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - app-network
  db:
    image: "mysql:8.0"
    container_name: "mysql"
    restart: unless-stopped
    tty: true
    command: --sql_mode=''
    ports:
      - "3309:3306"
    environment:
      MYSQL_DATABASE: learn-all
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: db
    volumes:
      - dbdatabase:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdatabase:
    driver: local
